name: AWS Deploy

on:
  push:
    branches:
      - dev-Mel

env:
  AWS_REGION: us-east-1
  ECR_BACKEND_REPO: backend-activosfijos
  ECR_FRONTEND_REPO: frontend-activosfijos
  ECS_CLUSTER: activos-cluster
  ECS_SERVICE_BACKEND: backend-service
  ECS_TASK_BACKEND: backend-task

jobs:
  build_and_push_backend:
    name: Build and Push Backend Image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push backend image to ECR
        run: |
          docker build -t $ECR_BACKEND_REPO ./ActivosFijosAPI
          docker tag $ECR_BACKEND_REPO:latest ${{ steps.login-ecr.outputs.registry }}/$ECR_BACKEND_REPO:latest
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_BACKEND_REPO:latest

  build_and_push_frontend:
    name: Build and Push Frontend Image
    runs-on: ubuntu-latest
    needs: build_and_push_backend

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push frontend image to ECR
        run: |
          docker build -t $ECR_FRONTEND_REPO ./app
          docker tag $ECR_FRONTEND_REPO:latest ${{ steps.login-ecr.outputs.registry }}/$ECR_FRONTEND_REPO:latest
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_FRONTEND_REPO:latest

  deploy_backend_to_ecs:
    name: Deploy Backend to ECS
    runs-on: ubuntu-latest
    needs: build_and_push_backend

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update ECS Service
        run: |
          aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE_BACKEND --force-new-deployment

  deploy_frontend_to_s3:
    name: Build and Deploy Frontend to S3
    runs-on: ubuntu-latest
    needs: build_and_push_frontend

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies and build
        working-directory: ./app
        run: |
          npm ci
          npm run build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Sync S3 Bucket
        run: |
          aws s3 sync ./app/build s3://your-frontend-bucket-name --delete
